nginx config
TLS SEARCHING /Users/brien/bringyour/keys-red/tls/2023.06.1
ASSIGNING PORTS tcp [%!s(int=80) %!s(int=443)] (map[%!s(int=80):%!s(int=80) %!s(int=443):%!s(int=443)])
ASSIGN PORT BLOCK lb by-ens160 80
ASSIGNED EXTERNAL PORT lb by-ens160 80 -> 80
ASSIGN PORT BLOCK lb by-ens160 80
ASSIGN PORT BLOCK lb by-ens160 443
ASSIGNED EXTERNAL PORT lb by-ens160 443 -> 443
ASSIGN PORT BLOCK lb by-ens160 443
ASSIGNING PORTS udp [] (map[%!s(int=80):%!s(int=80) %!s(int=443):%!s(int=443)])
ASSIGN PORT BLOCK web beta 80
ASSIGNED EXTERNAL PORT web beta 80 -> 7000
ASSIGN PORT BLOCK web beta 80
ASSIGN PORT BLOCK web g1 80
ASSIGNED EXTERNAL PORT web g1 80 -> 7001
ASSIGN PORT BLOCK web g1 80
ASSIGN PORT BLOCK web g2 80
ASSIGNED EXTERNAL PORT web g2 80 -> 7002
ASSIGN PORT BLOCK web g2 80
ASSIGN PORT BLOCK web g3 80
ASSIGNED EXTERNAL PORT web g3 80 -> 7003
ASSIGN PORT BLOCK web g3 80
ASSIGN PORT BLOCK web g4 80
ASSIGNED EXTERNAL PORT web g4 80 -> 7004
ASSIGN PORT BLOCK web g4 80
GENERATING FOR BLOCK by-ens160
PORT BLOCKS map[lb:map[by-ens160:map[%!s(int=80):%!s(*main.PortBlock=&{lb by-ens160 80 80 tcp [7201 7202 7203 7204 7205 7206 7207 7208 7209 7210 7211 7212 7213 7214 7215 7216 7217 7218 7219 7220 7221 7222 7223 7224 7225 7226 7227 7228 7229 7230] 100}) %!s(int=443):%!s(*main.PortBlock=&{lb by-ens160 443 443 tcp [7231 7232 7233 7234 7235 7236 7237 7238 7239 7240 7241 7242 7243 7244 7245 7246 7247 7248 7249 7250 7251 7252 7253 7254 7255 7256 7257 7258 7259 7260] 100})]] web:map[beta:map[%!s(int=80):%!s(*main.PortBlock=&{web beta 80 7000 tcp [7261 7262 7263 7264 7265 7266 7267 7268 7269 7270 7271 7272 7273 7274 7275 7276 7277 7278 7279 7280 7281 7282 7283 7284 7285 7286 7287 7288 7289 7290] 0})] g1:map[%!s(int=80):%!s(*main.PortBlock=&{web g1 80 7001 tcp [7291 7292 7293 7294 7295 7296 7297 7298 7299 7300 7301 7302 7303 7304 7305 7306 7307 7308 7309 7310 7311 7312 7313 7314 7315 7316 7317 7318 7319 7320] 0})] g2:map[%!s(int=80):%!s(*main.PortBlock=&{web g2 80 7002 tcp [7321 7322 7323 7324 7325 7326 7327 7328 7329 7330 7331 7332 7333 7334 7335 7336 7337 7338 7339 7340 7341 7342 7343 7344 7345 7346 7347 7348 7349 7350] 0})] g3:map[%!s(int=80):%!s(*main.PortBlock=&{web g3 80 7003 tcp [7351 7352 7353 7354 7355 7356 7357 7358 7359 7360 7361 7362 7363 7364 7365 7366 7367 7368 7369 7370 7371 7372 7373 7374 7375 7376 7377 7378 7379 7380] 0})] g4:map[%!s(int=80):%!s(*main.PortBlock=&{web g4 80 7004 tcp [7381 7382 7383 7384 7385 7386 7387 7388 7389 7390 7391 7392 7393 7394 7395 7396 7397 7398 7399 7400 7401 7402 7403 7404 7405 7406 7407 7408 7409 7410] 0})]]]
user www-data;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
# target concurrent users (from services.yml): 753664
# https://www.nginx.com/blog/tuning-nginx/
worker_processes 92;
events {
    worker_connections 8192;
    multi_accept on;
}
http {
    ##
    # Basic Settings
    ##

    sendfile on;
    # minimize latency
    tcp_nodelay on;
    tcp_nopush off;
    types_hash_max_size 2048;
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    # see https://syslink.pl/cipherlist/
    ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    upstream service-block-web {
        server warpservices:7000 weight=1;
        server warpservices:7001 weight=24;
        server warpservices:7002 weight=25;
        server warpservices:7003 weight=25;
        server warpservices:7004 weight=25;
        keepalive 1024;
        keepalive_requests 1024;
        keepalive_time 30s;
        keepalive_timeout 30s;
    }
    upstream service-block-web-beta {
        server warpservices:7000;

        keepalive 1024;
        keepalive_requests 1024;
        keepalive_time 30s;
        keepalive_timeout 30s;
    }
    upstream service-block-web-g1 {
        server warpservices:7001;

        keepalive 1024;
        keepalive_requests 1024;
        keepalive_time 30s;
        keepalive_timeout 30s;
    }
    upstream service-block-web-g2 {
        server warpservices:7002;

        keepalive 1024;
        keepalive_requests 1024;
        keepalive_time 30s;
        keepalive_timeout 30s;
    }
    upstream service-block-web-g3 {
        server warpservices:7003;

        keepalive 1024;
        keepalive_requests 1024;
        keepalive_time 30s;
        keepalive_timeout 30s;
    }
    upstream service-block-web-g4 {
        server warpservices:7004;

        keepalive 1024;
        keepalive_requests 1024;
        keepalive_time 30s;
        keepalive_timeout 30s;
    }
    # see https://www.nginx.com/blog/rate-limiting-nginx/
    limit_req_zone $binary_remote_addr zone=standardlimit:128m rate=5r/s;
    server {
        listen 80 default_server;
        server_name _;

        location / {
            deny all;
        }
    }
    server {
        listen 80;
        server_name local-lb.bringyour.com;
        return 301 https://$host$request_uri;
    }
    server {
        listen 443 ssl;
        server_name local-lb.bringyour.com;
        ssl_certificate     /srv/warp/vault/2023.06.1/star_bringyour_com.pem;
        ssl_certificate_key /srv/warp/vault/2023.06.1/star_bringyour_com.key;
        location =/status {
            root /srv/warp/status/;
            add_header Content-Type application/json;
        }
        location /virgo-arkansas-mao-zircon/by/service/web/ {
            limit_req zone=standardlimit burst=50 delay=25;
            proxy_pass http://service-block-web/;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host local-web.bringyour.com;
        }
        location /virgo-arkansas-mao-zircon/by/b/web/beta/ {
            limit_req zone=standardlimit burst=50 delay=25;
            proxy_pass http://service-block-web-beta/;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host local-web.bringyour.com;
        }
        location /virgo-arkansas-mao-zircon/by/b/web/g1/ {
            limit_req zone=standardlimit burst=50 delay=25;
            proxy_pass http://service-block-web-g1/;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host local-web.bringyour.com;
        }
        location /virgo-arkansas-mao-zircon/by/b/web/g2/ {
            limit_req zone=standardlimit burst=50 delay=25;
            proxy_pass http://service-block-web-g2/;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host local-web.bringyour.com;
        }
        location /virgo-arkansas-mao-zircon/by/b/web/g3/ {
            limit_req zone=standardlimit burst=50 delay=25;
            proxy_pass http://service-block-web-g3/;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host local-web.bringyour.com;
        }
        location /virgo-arkansas-mao-zircon/by/b/web/g4/ {
            limit_req zone=standardlimit burst=50 delay=25;
            proxy_pass http://service-block-web-g4/;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host local-web.bringyour.com;
        }
    }
    server {
        listen 80;
        server_name local-web.bringyour.com;
        return 301 https://$host$request_uri;
    }
    server {
        listen 443 ssl;
        server_name local-web.bringyour.com;
        ssl_certificate     /srv/warp/vault/2023.06.1/star_bringyour_com.pem;
        ssl_certificate_key /srv/warp/vault/2023.06.1/star_bringyour_com.key;

        location /callused-bronchus-eastern-quinine/ {
            limit_req zone=standardlimit burst=50 delay=25;
            proxy_pass http://service-block-web/;
            proxy_set_header X-Forwarded-For $remote_addr;

            # see https://enable-cors.org/server_nginx.html
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-Client-Version';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
             }
             if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' 'https://' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-Client-Version' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
             }
             if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' 'https://' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-Client-Version' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
             }
        }
    }
}